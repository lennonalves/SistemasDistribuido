/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ServidorDeChat.Telas;

import ServidorDeChat.RN.ClientesRN;
import ServidorDeChat.VO.ClientesVO;
import ServidorDeChat.VO.ConnectionCliente;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lennonalves
 */
public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form Cliente
     */
    public Cliente() {
        initComponents();
    }
    
    boolean flag = false;
    String hostName, ultimamensagem = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAtualizaChat = new javax.swing.JLabel();
        imgAtualizar = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        txtPorta = new javax.swing.JTextField();
        MensagemEnviar1 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JTextArea();
        MensagemEnviar = new javax.swing.JScrollPane();
        txtMensagem = new javax.swing.JTextArea();
        txtUser = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();
        lblEnviar = new javax.swing.JLabel();
        lblConectar = new javax.swing.JLabel();
        imgBg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pandachat | Cliente");
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(787, 590));
        setMinimumSize(new java.awt.Dimension(787, 590));
        setName("janelaCliente"); // NOI18N
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        lblAtualizaChat.setFont(new java.awt.Font("Zegoe Light - U", 0, 18)); // NOI18N
        lblAtualizaChat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAtualizaChat.setText("Atualizar Chat");
        lblAtualizaChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAtualizaChatMouseClicked(evt);
            }
        });
        getContentPane().add(lblAtualizaChat);
        lblAtualizaChat.setBounds(637, 310, 120, 26);

        imgAtualizar.setFont(new java.awt.Font("Eras Medium ITC", 0, 14)); // NOI18N
        imgAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        imgAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENS/atualizar32.png"))); // NOI18N
        imgAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgAtualizarMouseClicked(evt);
            }
        });
        getContentPane().add(imgAtualizar);
        imgAtualizar.setBounds(330, 240, 40, 50);

        txtIP.setText("localhost");
        getContentPane().add(txtIP);
        txtIP.setBounds(170, 160, 120, 28);

        txtPorta.setText("1970");
        getContentPane().add(txtPorta);
        txtPorta.setBounds(310, 160, 60, 28);

        txtChat.setColumns(20);
        txtChat.setRows(5);
        txtChat.setEnabled(false);
        MensagemEnviar1.setViewportView(txtChat);

        getContentPane().add(MensagemEnviar1);
        MensagemEnviar1.setBounds(430, 140, 330, 170);

        txtMensagem.setColumns(20);
        txtMensagem.setRows(5);
        MensagemEnviar.setViewportView(txtMensagem);

        getContentPane().add(MensagemEnviar);
        MensagemEnviar.setBounds(430, 410, 320, 90);
        getContentPane().add(txtUser);
        txtUser.setBounds(10, 160, 140, 28);

        tbClientes.setFont(new java.awt.Font("Zegoe Light - U", 0, 15)); // NOI18N
        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IP", "Porta", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbClientes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 290, 350, 230);

        lblEnviar.setFont(new java.awt.Font("Zegoe Light - U", 0, 14)); // NOI18N
        lblEnviar.setForeground(new java.awt.Color(254, 254, 254));
        lblEnviar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnviar.setText("Enviar");
        lblEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEnviarMouseClicked(evt);
            }
        });
        getContentPane().add(lblEnviar);
        lblEnviar.setBounds(680, 500, 90, 30);

        lblConectar.setFont(new java.awt.Font("Zegoe Light - U", 0, 14)); // NOI18N
        lblConectar.setForeground(new java.awt.Color(254, 254, 254));
        lblConectar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConectar.setText("Conectar");
        lblConectar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConectarMouseClicked(evt);
            }
        });
        getContentPane().add(lblConectar);
        lblConectar.setBounds(280, 200, 110, 30);

        imgBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENS/tela-cliente.jpg"))); // NOI18N
        getContentPane().add(imgBg);
        imgBg.setBounds(0, 0, 820, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        //atualizarListaCliente();
        //imprimir();
    }//GEN-LAST:event_formWindowActivated

    private void atualizarListaCliente(){
        ClientesVO cvo = ClientesVO.getInstancia();
        cvo.dtm = (DefaultTableModel) tbClientes.getModel();
        cvo.dtm.setNumRows(0);
        
        ClientesRN crn = ClientesRN.getInstancia();
        crn.atualizaClientes(cvo);
    }
    
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        atualizarListaCliente();
    }//GEN-LAST:event_formWindowGainedFocus

    private void imgAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgAtualizarMouseClicked
        // TODO add your handling code here:
        atualizarListaCliente();
    }//GEN-LAST:event_imgAtualizarMouseClicked

    private void lblConectarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConectarMouseClicked
        // TODO add your handling code here:
        
        if (!(txtUser.getText().equals("")||txtIP.getText().equals("")||txtPorta.getText().equals("")))
        {
            DatagramSocket conexao = null;

            if(flag == false)
            {
                //conectado

                txtUser.setEnabled(flag);
                txtIP.setEnabled(flag);
                txtPorta.setEnabled(flag);

                lblConectar.setText("Desconectar");
                flag = true;

                try 
                {

                    System.out.println("Status: Cliente Conectado");

                    hostName = null; hostName = txtUser.getText();
                    String mensagem = "1#" + hostName;

                    conexao = new DatagramSocket();
                    byte[] m = mensagem.getBytes();

                    InetAddress aHost = InetAddress.getByName(txtIP.getText());
                    int serverPort = Integer.parseInt(txtPorta.getText());

                    DatagramPacket request = new DatagramPacket(m, m.length, aHost, serverPort);
                    conexao.send(request);

                    //datagrama 4
                    ClientesVO cvo = ClientesVO.getInstancia();
                    cvo.setHostPort(Integer.toString(conexao.getPort()));
                    ConnectionCliente cc = new ConnectionCliente(conexao);
                    cc.start();

                } catch (IOException e)
                {  
                    System.out.println("IOException: " + e);
                }

            }
            else
            {
                //desconectado

                txtUser.setEnabled(flag);
                txtIP.setEnabled(flag);
                txtPorta.setEnabled(flag);

                lblConectar.setText("Conectar");
                flag = false;

                try 
                {
                    System.out.println("Status: Cliente Desconectado");

                    hostName = null; hostName = txtUser.getText();
                    String mensagem = "5#";

                    conexao = new DatagramSocket();
                    byte[] m = mensagem.getBytes();

                    InetAddress aHost = InetAddress.getByName(txtIP.getText());
                    int serverPort = Integer.parseInt(txtPorta.getText());

                    ClientesVO cvo = ClientesVO.getInstancia();
                    cvo.setHostPort(Integer.toString(conexao.getLocalPort()));
                    
                    DatagramPacket request = new DatagramPacket(m, m.length, aHost, serverPort);
                    conexao.send(request);

                } catch (IOException e)
                {  
                    System.out.println("IOException: " + e);
                }

                conexao.close();

            }
        }
        else
            JOptionPane.showMessageDialog(null, "Favor inserir os dados corretamente.");
    }//GEN-LAST:event_lblConectarMouseClicked

    void imprimir() {
        if (  !(ClientesVO.getInstancia().getAparecerNaTela().equals(""))  )
            if (  !(ClientesVO.getInstancia().getAparecerNaTela().equals(ultimamensagem))  )
                if (txtChat.getText().equals(""))
                {
                    txtChat.setText(txtChat.getText() + ClientesVO.getInstancia().getAparecerNaTela());
                    ultimamensagem = ClientesVO.getInstancia().getAparecerNaTela();
                }
                else
                {
                    txtChat.setText(txtChat.getText() + "\n" + ClientesVO.getInstancia().getAparecerNaTela());
                    ultimamensagem = ClientesVO.getInstancia().getAparecerNaTela();
                }
    }
    
    private void lblEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEnviarMouseClicked
        // TODO add your handling code here:
        
        if(tbClientes.getSelectedRow() >= 0) {
        
            ClientesVO cvo = ClientesVO.getInstancia();
            int linha = tbClientes.getSelectedRow(); DatagramSocket conexao = null;

            try 
            {
                
                cvo.setIpDestino((String) cvo.dtm.getValueAt(linha, 0));
                cvo.setPortaDestino((String) cvo.dtm.getValueAt(linha, 1));
                cvo.setConversa(txtMensagem.getText());

                cvo.setAparecerNaTela("VOCÊ:\t" + cvo.getConversa());

                String mensagem = "3#" + cvo.getIpDestino() + "#" + cvo.getPortaDestino() + "#" + cvo.getConversa();
    //            System.out.println(mensagem);

                conexao = new DatagramSocket();
                byte[] m = mensagem.getBytes();

                InetAddress aHost = InetAddress.getByName(txtIP.getText());
                int serverPort = Integer.parseInt(txtPorta.getText());

                DatagramPacket request = new DatagramPacket(m, m.length, aHost, serverPort);
                conexao.send(request);

            } catch (IOException e)
            {  
                System.out.println("IOException: " + e);
            }

            txtMensagem.setText("");
        
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Favor selecionar um usuário na lista.");
        }
        
    }//GEN-LAST:event_lblEnviarMouseClicked

    private void lblAtualizaChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAtualizaChatMouseClicked
        // TODO add your handling code here:
        imprimir();
    }//GEN-LAST:event_lblAtualizaChatMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane MensagemEnviar;
    private javax.swing.JScrollPane MensagemEnviar1;
    private javax.swing.JLabel imgAtualizar;
    private javax.swing.JLabel imgBg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAtualizaChat;
    private javax.swing.JLabel lblConectar;
    private javax.swing.JLabel lblEnviar;
    private javax.swing.JTable tbClientes;
    private javax.swing.JTextArea txtChat;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextArea txtMensagem;
    private javax.swing.JTextField txtPorta;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
